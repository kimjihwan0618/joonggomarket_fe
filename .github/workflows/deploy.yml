name: Deploy Next.js App to EC2 and S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 체크아웃 리포지토리
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Docker Compose 설정
      - name: Set up Docker Compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # 3. Yarn 설치 및 의존성 설치
      - name: Install yarn and dependencies
        run: |
          npm install -g yarn
          yarn install

      # 4. Docker Compose로 S3 빌드
      - name: Build and Upload to S3
        run: |
          docker-compose up --build app_s3

      # 5. S3 업로드
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: './out'

      # 6. EC2 배포 (SSH 접속)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 IP 주소
          username: ec2-user # EC2 사용자명
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }} # EC2 SSH 개인 키
          port: 22 # SSH 포트 (기본 22)
          script: |
            # 1. EC2에서 포트 3000 프로세스 종료
            sudo fuser -k 3000/tcp || true

            # 2. Git Pull 명령어 실행
            cd /home/ec2-user/joonggomarket_fe/
            git pull origin main

            # 3. Yarn Install 실행
            yarn install

            # 4. EC2에서 docker-compose 빌드 실행
            docker-compose up --build app_ec2

            # 5. 서버 실행
            yarn start > /dev/null 2>&1 &
