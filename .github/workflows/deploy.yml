name: Deploy Joonggomarket Static App(S3)

on:
  push:
    branches:
      - main # main 브랜치에 push 시 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Node.js 20.15.0 설치 및 yarn 설치
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.0'

      - name: Install yarn
        run: npm install -g yarn

      # 3. 의존성 설치
      - name: Install dependencies
        run: yarn install

      # ================ S3 배포 ==================================
      # 4. 정적 사이트 빌드
      - name: Build static files
        run: yarn build:ssg

      # 5. S3 업로드
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: './out' # 빌드 결과 디렉토리

      # 6. 동적 사이트 빌드
      - name: Build dynamic files
        run: yarn build


      # 7. EC2 서버 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user  # EC2의 기본 사용자 이름 (Amazon Linux의 경우)
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/joonggomarket_front
	   
            rm -rf *

            scp -i ${{ secrets.EC2_SSH_KEY }} -r ./next ./node_modules ./package.json ./yarn.lock ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/joonggomarket_front
           
	          PORT=3000
              PID=$(lsof -t -i:$PORT)
              if [ -n "$PID" ]; then
                echo "Stopping process on port $PORT (PID: $PID)..."
                kill -9 $PID
              else
                echo "No process found on port $PORT."
              fi
   
            yarn install
            yarn start > /dev/null 2>&1 &
         

      # 6. 버전 정보 파일 생성 및 업로드
      # - name: Upload version file
      #   run: |
      #     echo "{ \"version\": \"$(jq -r .version package.json)\", \"buildTime\": \"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\" }" > version.json
      #     aws s3 cp version.json s3://$AWS_S3_BUCKET/version.json --acl public-read

